version: '3'

services:

  grafana:
    image: grafana/grafana:$GRAFANA_VERSION
    container_name: grafana    
    restart: unless-stopped
    networks: 
      - extern
    ports:
      - 3000:3000
    volumes:
      - './grafana/provisioning/datasources:/etc/grafana/provisioning/datasources'
      - './grafana/grafana.ini:/etc/grafana/grafana.ini'
      - grafana-data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=extern"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN_NAME}`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=dns-cloudflare"
      - "traefik.http.services.grafana.loadbalancer.server.scheme=http"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  prometheus:
    image: prom/prometheus:$PROMETHEUS_VERSION
    container_name: prometheus
    restart: unless-stopped
    networks: 
      - extern
    ports:
      - 9090:9090
    volumes:
      - './prometheus:/etc/prometheus'
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  alertmanager:
    image: prom/alertmanager:$ALERTMANAGER_VESRION
    container_name: alertmanager    
    restart: unless-stopped
    ports:
      - 9093:9093
    volumes:
      - "./alertmanager:/config"
      - alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug 

volumes:
  grafana-data:
  prometheus-data:
  alertmanager-data:
  
networks:
  extern:
    external: true